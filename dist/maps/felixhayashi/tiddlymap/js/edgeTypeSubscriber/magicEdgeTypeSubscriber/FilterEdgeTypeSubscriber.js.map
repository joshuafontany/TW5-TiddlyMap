{"version":3,"sources":["felixhayashi/tiddlymap/js/edgeTypeSubscriber/magicEdgeTypeSubscriber/FilterEdgeTypeSubscriber.js"],"names":["Object","defineProperty","exports","value","FilterEdgeTypeSubstriber","undefined","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","Constructor","protoProps","staticProps","_utils","require","_utils2","_interopRequireDefault","_AbstractMagicEdgeTypeSubscriber","_AbstractMagicEdgeTypeSubscriber2","_widget","_widget2","obj","__esModule","default","_classCallCheck","instance","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","setPrototypeOf","__proto__","_AbstractMagicEdgeTyp","allEdgeTypes","options","this","getPrototypeOf","priority","canHandle","edgeType","namespace","getReferencesFromField","tObj","fieldName","toWL","filter","fields","parentWidget","Widget","widget","setVariable","title","toRefs","utils","getMatches","insertEdge","edge","type","to","name","currentFilter","toTRef","tracker","getTiddlerById","safe_toTRef","$tw","stringifyList","setField","AbstractMagicEdgeTypeSubscriber"],"mappings":"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","file":"../../../../../../felixhayashi/tiddlymap/js/edgeTypeSubscriber/magicEdgeTypeSubscriber/FilterEdgeTypeSubscriber.js","sourcesContent":["/* @preserve TW-Guard */\n/*\\\n\ntitle: $:/plugins/felixhayashi/tiddlymap/js/modules/edge-type-handler/filter\ntype: application/javascript\nmodule-type: tmap.edgetypehandler\n\n@preserve\n\n\\*/\n/* @preserve TW-Guard */\n\n/*** Imports *******************************************************/\n\nimport utils from '$:/plugins/felixhayashi/tiddlymap/js/utils';\nimport AbstractMagicEdgeTypeSubscriber from '$:/plugins/felixhayashi/tiddlymap/js/AbstractMagicEdgeTypeSubscriber';\nimport Widget from \"$:/core/modules/widgets/widget.js\";\n\n/*** Code **********************************************************/\n\n/**\n * The FilterEdgeTypeSubstriber deals with connections that are stored inside\n * tiddler fields via a dynamic filter.\n *\n * @see http://tiddlymap.org/#tw-filter\n * @see https://github.com/felixhayashi/TW5-TiddlyMap/issues/206\n */\nclass FilterEdgeTypeSubstriber extends AbstractMagicEdgeTypeSubscriber {\n\n  /**\n   * @inheritDoc\n   */\n  constructor(allEdgeTypes, options = {}) {\n    super(allEdgeTypes, { priority: 10, ...options });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  canHandle(edgeType) {\n\n    return edgeType.namespace === 'tw-filter';\n\n  }\n\n  /**\n   * @override\n   */\n  getReferencesFromField(tObj, fieldName, toWL) {\n\n    const filter = tObj.fields[fieldName];\n\n    // Solves https://github.com/felixhayashi/TW5-TiddlyMap/issues/278\n    const parentWidget = new Widget.widget({});\n    parentWidget.setVariable(\"currentTiddler\", tObj.fields.title);\n    const widget = new Widget.widget({}, {\"parentWidget\": parentWidget});\n    //noinspection UnnecessaryLocalVariableJS\n    const toRefs = utils.getMatches(filter, toWL, widget);\n\n    return toRefs;\n\n  }\n\n  /**\n   * Stores and maybe overrides an edge in this tiddler\n   */\n  insertEdge(tObj, edge, type) {\n\n    if (!edge.to) {\n      return;\n    }\n\n    // get the name without the private marker or the namespace\n    const name = type.name;\n    const currentFilter = tObj.fields[name] || \"\";\n    const toTRef = this.tracker.getTiddlerById(edge.to);\n    // by treating the toTRef as a list of one, we can make\n    // it safe to append to any filter.\n    // \"tiddler\" -> \"tiddler\"\n    // \"tiddler with spaces\" -> \"[[tiddler with spaces]]\"\n    var safe_toTRef = $tw.utils.stringifyList([toTRef]);\n\n    if (currentFilter.length > 0) {\n      safe_toTRef = \" \" + safe_toTRef;\n    }\n\n    // save\n    utils.setField(tObj, name, currentFilter + safe_toTRef);\n\n    return edge;\n\n  };\n}\n\n/*** Exports *******************************************************/\n\nexport { FilterEdgeTypeSubstriber };\n"],"sourceRoot":"../../../../../../../src/plugins"}