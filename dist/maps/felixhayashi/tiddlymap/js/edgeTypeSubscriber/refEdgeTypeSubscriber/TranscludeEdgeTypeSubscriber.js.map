{"version":3,"sources":["felixhayashi/tiddlymap/js/edgeTypeSubscriber/refEdgeTypeSubscriber/TranscludeEdgeTypeSubscriber.js"],"names":["Object","defineProperty","exports","value","TranscludeEdgeTypeSubscriber","undefined","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","Constructor","protoProps","staticProps","_AbstractRefEdgeTypeSubscriber","require","_AbstractRefEdgeTypeSubscriber2","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","setPrototypeOf","__proto__","_AbstractRefEdgeTypeS","allEdgeTypes","options","this","getPrototypeOf","priority","ignore","$tw","wiki","getTiddlerTranscludes","canHandle","edgeType","id","getReferences","tObj","toWL","typeWL","toRefs","fields","title","tw-body:transclude","AbstractRefEdgeTypeSubscriber"],"mappings":"AAAA,aAEAA,OAAOC,eAAeC,QAAS,aAAc,CAC3CC,MAAO,OAETD,QAAQE,6BAA+BC,UAEvC,IAAIC,SAAWN,OAAOO,QAAU,SAAUC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAASF,UAAUD,GAAI,IAAK,IAAII,KAAOD,EAAQ,CAAE,GAAIZ,OAAOc,UAAUC,eAAeC,KAAKJ,EAAQC,GAAM,CAAEL,EAAOK,GAAOD,EAAOC,KAAY,OAAOL,GAEvP,IAAIS,aAAe,WAAc,SAASC,EAAiBV,EAAQW,GAAS,IAAK,IAAIV,EAAI,EAAGA,EAAIU,EAAMR,OAAQF,IAAK,CAAE,IAAIW,EAAaD,EAAMV,GAAIW,EAAWC,WAAaD,EAAWC,YAAc,MAAOD,EAAWE,aAAe,KAAM,GAAI,UAAWF,EAAYA,EAAWG,SAAW,KAAMvB,OAAOC,eAAeO,EAAQY,EAAWP,IAAKO,IAAiB,OAAO,SAAUI,EAAaC,EAAYC,GAAe,GAAID,EAAYP,EAAiBM,EAAYV,UAAWW,GAAa,GAAIC,EAAaR,EAAiBM,EAAaE,GAAc,OAAOF,GAA7gB,GAGnB,IAAAG,+BAAAC,QAAA,sEACA,IAAIC,gCAAkCC,uBAAuBH,gCAE7D,SAASG,uBAAuBC,GAAO,OAAOA,GAAOA,EAAIC,WAAaD,EAAM,CAAEE,QAASF,GAEvF,SAASG,gBAAgBC,EAAUX,GAAe,KAAMW,aAAoBX,GAAc,CAAE,MAAM,IAAIY,UAAU,sCAEhH,SAASC,2BAA2BC,EAAMtB,GAAQ,IAAKsB,EAAM,CAAE,MAAM,IAAIC,eAAe,6DAAgE,OAAOvB,WAAgBA,IAAS,iBAAmBA,IAAS,YAAcA,EAAOsB,EAEzO,SAASE,UAAUC,EAAUC,GAAc,UAAWA,IAAe,YAAcA,IAAe,KAAM,CAAE,MAAM,IAAIN,UAAU,kEAAoEM,GAAeD,EAAS3B,UAAYd,OAAO2C,OAAOD,GAAcA,EAAW5B,UAAW,CAAE8B,YAAa,CAAEzC,MAAOsC,EAAUpB,WAAY,MAAOE,SAAU,KAAMD,aAAc,QAAW,GAAIoB,EAAY1C,OAAO6C,eAAiB7C,OAAO6C,eAAeJ,EAAUC,GAAcD,EAASK,UAAYJ;;;;;;;;;;wBAkBje,IAnBMtC,6BAmB6B,SAAU2C,GAC3CP,UAAUpC,EAA8B2C,GAfxC,SAAA3C,EAAY4C,GAA4B,IAAdC,EAAcvC,UAAAC,OAAA,GAAAD,UAAA,KAAAL,UAAAK,UAAA,GAAJ,GAAIwB,gBAAAgB,KAAA9C,GAAA,OAAAiC,2BAAAa,MAAA9C,EAAA0C,WAAA9C,OAAAmD,eAAA/C,IAAAY,KAAAkC,KAChCF,EADgC1C,SAAA,CAEpC8C,SAAU,GACVC,cAAgBC,IAAIC,KAAKC,wBAA0B,YAChDP,KAgCPhC,aAAab,EAA8B,CAAC,CAC1CS,IAAK,YACLV,MAAO,SAASsD,EA3BRC,GAER,OAAOA,EAASC,KAAO,uBAkCtB,CACD9C,IAAK,gBACLV,MAAO,SAASyD,EA7BJC,EAAMC,EAAMC,GAExB,GAAIA,IAAWA,EAAO,sBAAuB,CAC3C,OAGF,IAAIC,EAASV,IAAIC,KAAKC,sBAAsBK,EAAKI,OAAOC,OAExD,IAAKF,IAAWA,EAAOrD,OAAQ,CAC7B,OAGF,MAAO,CAAEwD,qBAAsBH,OAiCjC,OAAO5D,EAnD0B,CAnBQgE,gCAAAA,SA2E3ClE,QA/BSE,6BAAAA","file":"../../../../../../felixhayashi/tiddlymap/js/edgeTypeSubscriber/refEdgeTypeSubscriber/TranscludeEdgeTypeSubscriber.js","sourcesContent":["/* @preserve TW-Guard */\n/*\\\n\ntitle: $:/plugins/felixhayashi/tiddlymap/js/modules/edge-type-handler/body/transclude\ntype: application/javascript\nmodule-type: tmap.edgetypehandler\n\n@preserve\n\n\\*/\n/* @preserve TW-Guard */\n\nimport AbstractRefEdgeTypeSubscriber from '$:/plugins/felixhayashi/tiddlymap/js/AbstractRefEdgeTypeSubscriber';\n\n/**\n * The TranscludeEdgeTypeSubscriber retrieves connections that result tiddler transclusions.\n *\n * Note: This subscriber only retrieves edges, however doesn't store or delete them. It only\n * works if the `$tw.wiki.getTiddlerTranscludes` method is present in the wiki.\n */\nclass TranscludeEdgeTypeSubscriber extends AbstractRefEdgeTypeSubscriber {\n\n  /**\n   * @inheritDoc\n   */\n  constructor(allEdgeTypes, options = {}) {\n    super(allEdgeTypes, {\n      priority: 20,\n      ignore: (typeof $tw.wiki.getTiddlerTranscludes !== 'function'),\n      ...options,\n    });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  canHandle(edgeType) {\n\n    return edgeType.id === 'tw-body:transclude';\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getReferences(tObj, toWL, typeWL) {\n\n    if (typeWL && !typeWL['tw-body:transclude']) {\n      return;\n    }\n\n    var toRefs = $tw.wiki.getTiddlerTranscludes(tObj.fields.title);\n\n    if (!toRefs || !toRefs.length) {\n      return;\n    }\n\n    return { 'tw-body:transclude': toRefs };\n\n  }\n}\n\n/*** Exports *******************************************************/\n\nexport { TranscludeEdgeTypeSubscriber };\n"],"sourceRoot":"../../../../../../../src/plugins"}