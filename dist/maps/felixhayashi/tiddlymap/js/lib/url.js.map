{"version":3,"sources":["felixhayashi/tiddlymap/js/lib/url.js"],"names":["Object","defineProperty","exports","value","Url","url","this","paths","prefix","i","s","length","isAbsolute","encode","path","join","charAt","slice","split","decode","protocol","toString","user","pass","host","port","query","hash","parse","map","defaultPorts","ftp","gopher","http","https","ws","wss","self","d","document","link","createElement","location","href","auth","match","replace","test","base","basePath","selfPath","props","pop","shift","parseQs","encodeURIComponent","code","hex1","hex2","hex3","n1","parseInt","n2","n3","n","String","fromCharCode","hex","qs","re","exec","key","decodeURIComponent","Array","push","clear","Function","count","isEmpty","e","ii","len","default"],"mappings":"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","file":"../../../../../felixhayashi/tiddlymap/js/lib/url.js","sourcesContent":["/* @preserve TW-Guard */\n/*\\\n\ntitle: $:/plugins/felixhayashi/tiddlymap/js/URL\ntype: application/javascript\nmodule-type: library\n\n@preserve\n\n\\*/\n/* @preserve TW-Guard */\n\n/*** Code **********************************************************/\n\n/**\n * <<<\n * Lightweight URL manipulation with JavaScript. This library is\n * independent of any other libraries and has pretty simple interface\n * and lightweight code-base. Some ideas of query string parsing\n * had been taken from Jan Wolter.\"\n *\n * @see http://unixpapa.com/js/querystring.html\n * @license MIT\n * @author Mykhailo Stadnyk <mikhus@gmail.com>\n * <<< https://github.com/Mikhus/jsurl\n *\n * @class\n * @param {string} url\n */\nfunction Url( url) {\n  this.paths = function( paths) {\n    var prefix = '', i = 0, s;\n\n    if (paths && paths.length && paths + '' !== paths) {\n      if (this.isAbsolute()) {\n        prefix = '/';\n      }\n\n      for (s = paths.length; i < s; i++) {\n        paths[i] = encode(paths[i]);\n      }\n\n      this.path = prefix + paths.join('/');\n    }\n\n    paths = (this.path.charAt(0) === '/' ?\n      this.path.slice(1) : this.path).split('/');\n\n    for (i = 0, s = paths.length; i < s; i++) {\n      paths[i] = decode(paths[i]);\n    }\n\n    return paths;\n  };\n\n  this.encode = encode;\n  this.decode = decode;\n\n  this.isAbsolute = function() {\n    return this.protocol || this.path.charAt(0) === '/';\n  };\n\n  this.toString = function() {\n    return (\n      (this.protocol && (this.protocol + '://')) +\n      (this.user && (\n        encode(this.user) + (this.pass && (':' + encode(this.pass))\n      ) + '@')) +\n      (this.host && this.host) +\n      (this.port && (':' + this.port)) +\n      (this.path && this.path) +\n      (this.query.toString() && ('?' + this.query)) +\n      (this.hash && ('#' + encode(this.hash)))\n    );\n  };\n\n  parse( this, url);\n}\n\nvar\n    // mapping between what we want and <a> element properties\n  map = {\n    protocol : 'protocol',\n    host     : 'hostname',\n    port     : 'port',\n    path     : 'pathname',\n    query    : 'search',\n    hash     : 'hash'\n  },\n\n  defaultPorts = {\n    'ftp'    : 21,\n    'gopher' : 70,\n    'http'   : 80,\n    'https'  : 443,\n    'ws'     : 80,\n    'wss'    : 443\n  },\n\n  parse = function( self, url) {\n    var\n      d      = document,\n      link   = d.createElement( 'a'),\n      url    = url || d.location.href,\n      auth   = url.match( /\\/\\/(.*?)(?::(.*?))?@/) || [],\n      i\n      ;\n\n    link.href = url;\n\n    for (i in map) {\n      self[i] = link[map[i]] || '';\n    }\n\n      // fix-up some parts\n    self.protocol = self.protocol.replace( /:$/, '');\n    self.query    = self.query.replace( /^\\?/, '');\n    self.hash     = decode(self.hash.replace( /^#/, ''));\n    self.user     = decode(auth[1] || '');\n    self.pass     = decode(auth[2] || '');\n    self.port     = (\n        defaultPorts[self.protocol] == self.port || self.port == 0\n      ) ? '' : self.port; // IE fix, Android browser fix\n\n    if (!self.protocol && !/^([a-z]+:)?\\/\\//.test( url)) {\n        // is IE and path is relative\n      var\n        base     = new Url( d.location.href.match(/(.*\\/)/)[0]),\n        basePath = base.path.split( '/'),\n        selfPath = self.path.split( '/'),\n        props = [ 'protocol','user','pass','host','port' ],\n        s = props.length\n        ;\n\n      basePath.pop();\n\n      for (i = 0; i < s; i++) {\n        self[props[i]] = base[props[i]];\n      }\n\n      while (selfPath[0] == '..') { // skip all \"../\n        basePath.pop();\n        selfPath.shift();\n      }\n\n      self.path =\n          (url.charAt(0) != '/' ? basePath.join( '/') : '') +\n          '/' + selfPath.join( '/')\n        ;\n    }\n\n    else {\n        // fix absolute URL's path in IE\n      self.path = self.path.replace( /^\\/?/, '/');\n    }\n\n    self.paths((self.path.charAt(0) == '/' ?\n        self.path.slice(1) : self.path).split('/')\n      );\n\n    parseQs( self);\n  },\n\n  encode = function(s) {\n    return encodeURIComponent(s).replace(/'/g, '%27');\n  },\n\n  decode = function(s) {\n    s = s.replace( /\\+/g, ' ');\n\n    s = s.replace(/%([ef][0-9a-f])%([89ab][0-9a-f])%([89ab][0-9a-f])/gi,\n        function( code, hex1, hex2, hex3) {\n          var\n            n1 = parseInt( hex1, 16) - 0xE0,\n            n2 = parseInt( hex2, 16) - 0x80\n            ;\n\n          if (n1 == 0 && n2 < 32) {\n            return code;\n          }\n\n          var\n            n3 = parseInt( hex3, 16) - 0x80,\n            n = (n1 << 12) + (n2 << 6) + n3\n            ;\n\n          if (n > 0xFFFF) {\n            return code;\n          }\n\n          return String.fromCharCode( n);\n        }\n      );\n\n    s = s.replace( /%([cd][0-9a-f])%([89ab][0-9a-f])/gi,\n        function( code, hex1, hex2) {\n          var n1 = parseInt(hex1, 16) - 0xC0;\n\n          if (n1 < 2) {\n            return code;\n          }\n\n          var n2 = parseInt(hex2, 16) - 0x80;\n\n          return String.fromCharCode( (n1 << 6) + n2);\n        }\n      );\n\n    s = s.replace( /%([0-7][0-9a-f])/gi,\n        function( code, hex) {\n          return String.fromCharCode( parseInt(hex, 16));\n        }\n      );\n\n    return s;\n  },\n\n  parseQs = function( self) {\n    var qs = self.query;\n\n    self.query = new (function( qs) {\n      var re = /([^=&]+)(=([^&]*))?/g, match;\n\n      while ((match = re.exec( qs))) {\n        var\n          key = decodeURIComponent(match[1].replace(/\\+/g, ' ')),\n          value = match[3] ? decode(match[3]) : ''\n          ;\n\n        if (this[key] != null) {\n          if (!(this[key] instanceof Array)) {\n            this[key] = [ this[key] ];\n          }\n\n          this[key].push( value);\n        }\n\n        else {\n          this[key] = value;\n        }\n      }\n\n      this.clear = function() {\n        for (var key in this) {\n\n          if (!(this[key] instanceof Function)) {\n\n            delete this[key];\n          }\n        }\n      };\n\n      this.count = function() {\n        var count = 0, key;\n        for (key in this) {\n\n          if (!(this[key] instanceof Function)) {\n            count++;\n          }\n        }\n        return count;\n      };\n\n      this.isEmpty = function() {\n        return this.count() === 0;\n      };\n\n      this.toString = function() {\n        var s = '', e = encode, i, ii;\n\n        for (i in this) {\n\n          if (this[i] instanceof Function) {\n            continue;\n          }\n\n\n          if (this[i] instanceof Array) {\n\n            var len = this[i].length;\n\n            if (len) {\n              for (ii = 0; ii < len; ii++) {\n                s += s ? '&' : '';\n\n                s += e( i) + '=' + e( this[i][ii]);\n              }\n            }\n\n            else {\n                // parameter is an empty array, so treat as\n                // an empty argument\n\n              s += (s ? '&' : '') + e( i) + '=';\n            }\n          }\n\n          else {\n            s += s ? '&' : '';\n\n            s += e( i) + '=' + e( this[i]);\n          }\n        }\n\n        return s;\n      };\n    })( qs);\n  }\n  ;\n\n/*** Exports *******************************************************/\n\nexport default Url;\n"],"sourceRoot":"../../../../../../src/plugins"}