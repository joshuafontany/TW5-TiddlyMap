{"version":3,"sources":["felixhayashi/tiddlymap/js/lib/Popup.js"],"names":["Object","defineProperty","exports","value","_utils","require","_utils2","_interopRequireDefault","obj","__esModule","default","Popup","parentDomNode","options","this","_parentDomNode","_domNode","document","createElement","style","display","className","appendChild","$tw","utils","addClass","_isEnabled","_isPreventShowOrHide","_isHideOnClick","hideOnClick","_timeoutShow","_timeoutHide","_isDisplayNoneAfterAnimation","val","parseInt","leavingDelay","_hideDelayLeavingPopup","isInteger","hideDelay","_hideDelay","showDelay","_showDelay","bindTo","_listeners","mouseenter","_handleEnter","mouseleave","_handleLeave","click","_handleClick","fn","_handleAnimationEnd","convertEventName","setDomListeners","prototype","ev","hide","_hide","isForce","removeClass","_show","signature","text","$tm","mouse","ctrlKey","removeAttribute","removeDOMChildNodes","div","innerHTML","childNodes","length","parRect","getBoundingClientRect","x","clientX","y","clientY","popRect","availSpaceRight","right","width","availSpaceLeft","left","spawnRight","availSpaceBottom","bottom","height","availSpaceTop","top","spawnBottom","shiftLeft","shiftTop","show","delay","_clearTimeouts","setTimeout","setEnabled","isEnabled","isShown","clearTimeout","undefined"],"mappings":"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","file":"../../../../../felixhayashi/tiddlymap/js/lib/Popup.js","sourcesContent":["/* @preserve TW-Guard */\n/*\\\n\ntitle: $:/plugins/felixhayashi/tiddlymap/js/Popup\ntype: application/javascript\nmodule-type: library\n\n@preserve\n\n\\*/\n/* @preserve TW-Guard */\n\n/*** Imports *******************************************************/\n\nimport utils from '$:/plugins/felixhayashi/tiddlymap/js/utils';\n\n/**** Code *********************************************************/\n\n/**\n * Installs a hidden popup below `parentDomNode` that may be shown\n * and or hidden.\n *\n * @constructor\n *\n * @param {Element} [parentDomNode] - The popup container. The\n *    popup will create itself in this container.\n * @param {Hashmap} [options] - An options object.\n * @param {string} [options.className] - A classname to be added to\n *    the popup div.\n * @param {int} [options.delay] - The default delay for the popup\n *    show and hide.\n */\nfunction Popup(parentDomNode, options) {\n\n  options = options || {};\n\n  this._parentDomNode = parentDomNode;\n  this._domNode = document.createElement('div');\n  this._domNode.style.display = 'none';\n  this._domNode.className = 'tmap-popup';\n\n  this._parentDomNode.appendChild(this._domNode);\n  $tw.utils.addClass(this._domNode, options.className);\n\n  this._isEnabled = true;\n  this._isPreventShowOrHide = false;\n  this._isHideOnClick = !!options.hideOnClick;\n  this._timeoutShow = null;\n  this._timeoutHide = null;\n  this._isDisplayNoneAfterAnimation = true;\n\n  // delays\n  let val = parseInt(options.leavingDelay);\n  this._hideDelayLeavingPopup = utils.isInteger(val) ? val : 200;\n\n  val = parseInt(options.hideDelay);\n  this._hideDelay = utils.isInteger(val) ? val : 200;\n\n  val = parseInt(options.showDelay);\n  this._showDelay = utils.isInteger(val) ? val : 200;\n\n  // force early binding of functions to this context\n  utils.bindTo(this, [\n    '_show',\n    '_hide',\n    '_handleEnter',\n    '_handleLeave',\n    '_handleAnimationEnd',\n    '_handleClick'\n  ]);\n\n  // specify handlers\n  this._listeners = {\n    'mouseenter': this._handleEnter,\n    'mouseleave': this._handleLeave,\n    'click': [ this._handleClick, true ]\n  };\n\n  const fn = this._handleAnimationEnd;\n  this._listeners[$tw.utils.convertEventName('animationEnd')] = fn;\n  this._listeners[$tw.utils.convertEventName('transitionEnd')] = fn;\n\n  // add handlers\n  utils.setDomListeners('add', this._domNode, this._listeners, false);\n\n}\n\n/**\n * When the mouse is inside the popup, the popup will manage closing\n * itself and ignore all closing attempts from outside.\n */\nPopup.prototype._handleEnter = function(ev) {\n\n  //~ console.log(\"_handleEnter\");\n\n  this._isPreventShowOrHide = true;\n\n};\n\n/**\n * Handler triggered when leaving the popup div.\n */\nPopup.prototype._handleLeave = function(ev) {\n\n  //~ console.log(\"_handleLeave\");\n\n  this._isPreventShowOrHide = false;\n\n  // we need some delay because resizing may cause the mouse to\n  // exit the popup for some miliseconds\n\n  this.hide(this._hideDelayLeavingPopup);\n\n};\n\nPopup.prototype._handleClick = function(ev) {\n\n  //~ console.log(\"_handleLeave\");\n\n  if (this._isHideOnClick) {\n    this._hide(true);\n  }\n\n};\n\n/**\n * Handler triggered when leaving the popup div.\n */\nPopup.prototype._handleAnimationEnd = function() {\n\n  if (this._isDisplayNoneAfterAnimation) {\n    //~ console.log(\"display: none\");\n    this._domNode.style.display = 'none';\n  }\n\n};\n\n/**\n * Immediately hides the popup.\n */\nPopup.prototype._hide = function(isForce) {\n\n  //~ console.log(\"_hide\");\n\n  if (!isForce && this._isPreventShowOrHide) return;\n\n  //~ console.log(\"_hide SUCCESS\");\n\n  this._isDisplayNoneAfterAnimation = true;\n  this._isPreventShowOrHide = false;\n\n  $tw.utils.removeClass(this._domNode, 'tmap-popup-active');\n\n};\n\n/**\n * Makes the text visible as popup and registers it with the\n * given signature.\n *\n * The popup is spawned on the side that has the most space.\n *\n * @param {*} signature - The signature that has been\n *     passed to {@link show}.\n */\nPopup.prototype._show = function(signature, text) {\n\n  //~ console.log(\"_show\");\n\n  if (this._isPreventShowOrHide || $tm.mouse.ctrlKey || !this._isEnabled) {\n    return;\n  }\n\n  this._domNode.style.display = 'none';\n  $tw.utils.removeClass(this._domNode, 'tmap-popup-active');\n\n  // remove any positioning or modification done before\n  this._domNode.removeAttribute('style');\n\n  // remove any previous content\n  utils.removeDOMChildNodes(this._domNode);\n  var div = this._domNode.appendChild(document.createElement('div'));\n\n  if (typeof text === 'function') {\n    text(signature, div);\n  } else {\n    div.innerHTML = text;\n  }\n\n  if (!div.childNodes.length) return;\n\n  var parRect = this._parentDomNode.getBoundingClientRect();\n  var x = $tm.mouse.clientX;\n  var y = $tm.mouse.clientY;\n\n  //~ console.log(\"_show SUCCESS\");\n\n  // ATTENTION: display needs to be true before we can get the bounds!\n\n  // make sure that display is block so the animation is executed\n  // and we can retrieve the size of the div.\n  this._domNode.style.display = 'block';\n\n  var popRect = this._domNode.getBoundingClientRect();\n\n  var availSpaceRight = parRect.right - (x + popRect.width);\n  var availSpaceLeft = (x - popRect.width) - parRect.left;\n  var spawnRight = availSpaceRight > availSpaceLeft;\n\n  var availSpaceBottom = parRect.bottom - (y + popRect.height);\n  var availSpaceTop = (y - popRect.height) - parRect.top;\n  var spawnBottom = availSpaceBottom > availSpaceTop;\n\n  var shiftLeft = spawnRight ? -15 : popRect.width + 15;\n  var shiftTop = spawnBottom ? -15 : popRect.height + 15;\n\n  this._domNode.style.left = (x - parRect.left - shiftLeft) + 'px';\n  this._domNode.style.top = (y - parRect.top - shiftTop) + 'px';\n\n  // …and make sure that it stays block after the animation is done…\n  this._isDisplayNoneAfterAnimation = false;\n  // …and add the class that triggers the animation…\n  $tw.utils.addClass(this._domNode, 'tmap-popup-active');\n\n};\n\n/**\n * Makes the text visible as popup after a given delay and\n * registers the popup under the specified signature.\n *\n * @param {*} signature - If {@param text} is provided as param and\n *     is a function, then this will be passed later as argument to\n *     text. It therefore acts as means to identify the popup later\n *     on or pass data that survives the delay.\n * @param {string|Function} text - If text\n *     is a string, it will be shown in the popup, otherwise,\n *     if text is a function, it will be executed and it is\n *     expected to populate the popup div passed as second parameter;\n *     the first parameter will be the signature object.\n * @param{delay} delay - Delays the hide operation.\n */\nPopup.prototype.show = function(signature, text, delay) {\n\n  //~ console.log(\"show\", delay);\n\n  this._clearTimeouts();\n\n  delay = (utils.isInteger(delay) ? delay : this._showDelay);\n\n  // start a new timeout\n  this._timeoutShow = setTimeout(this._show, delay, signature, text);\n\n};\n\n/**\n * Hide the popup.\n *\n * @param {int} delay - Delays the hide operation.\n */\nPopup.prototype.hide = function(delay, isForce) {\n\n  //~ console.log(\"hide\", delay);\n\n  this._clearTimeouts();\n\n  delay = (utils.isInteger(delay) ? delay : this._hideDelay);\n\n  if (isForce || delay === 0) { // @TODO is this really correct?\n    this._hide(isForce);\n  } else {\n    this._timeoutHide = setTimeout(this._hide, delay, isForce);\n  }\n\n};\n\n/**\n * Completely enable or disable the popup\n */\nPopup.prototype.setEnabled = function(isEnabled) {\n  this._isEnabled = isEnabled;\n};\n\nPopup.prototype.isShown = function() {\n  return this._domNode.style.display === 'block';\n};\n\nPopup.prototype._clearTimeouts = function() {\n\n  clearTimeout(this._timeoutShow);\n  clearTimeout(this._timeoutHide);\n\n  this._timeoutShow = undefined;\n  this._timeoutHide = undefined;\n\n};\n\n\n/*** Exports *******************************************************/\n\nexport default Popup;\n"],"sourceRoot":"../../../../../../src/plugins"}